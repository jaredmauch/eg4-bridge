use crate::prelude::*;

/// Parse and decode an input register value according to Table 7 of the protocol specification
pub fn parse_input_register(reg: u16, value: u16) -> String {
    match reg {
        // System Status (0-39)
        0 => format!("Inverter Status: {}", match value {
            0 => "Standby - Waiting",
            1 => "Self-Test",
            2 => "Normal Operation",
            3 => "Alarm",
            4 => "Fault",
            _ => "Unknown Status"
        }),
        1 => format!("Run Status: {:#06x}", value),
        2 => format!("Grid Voltage: {:.1} V", (value as f64) / 10.0),
        3 => format!("Grid Current: {:.1} A", (value as f64) / 10.0),
        4 => format!("Grid Frequency: {:.2} Hz", (value as f64) / 100.0),
        5 => format!("Load Voltage: {:.1} V", (value as f64) / 10.0),
        6 => format!("Load Current: {:.1} A", (value as f64) / 10.0),
        7 => format!("Load Frequency: {:.2} Hz", (value as f64) / 100.0),
        8 => format!("Load Power: {} W", value),
        9 => format!("Load VA: {} VA", value),
        10 => format!("Bus Voltage: {:.1} V", (value as f64) / 10.0),
        11 => format!("Battery Voltage: {:.1} V", (value as f64) / 10.0),
        12 => format!("Battery Current: {:.1} A", (value as f64) / 10.0),
        13 => format!("Battery Power: {} W", value),
        14 => format!("PV1 Voltage: {:.1} V", (value as f64) / 10.0),
        15 => format!("PV1 Current: {:.1} A", (value as f64) / 10.0),
        16 => format!("PV1 Power: {} W", value),
        17 => format!("PV2 Voltage: {:.1} V", (value as f64) / 10.0),
        18 => format!("PV2 Current: {:.1} A", (value as f64) / 10.0),
        19 => format!("PV2 Power: {} W", value),
        20 => format!("Grid Power: {} W", value),
        21 => format!("Grid VA: {} VA", value),
        22 => format!("Grid VAR: {} VAR", value),
        23 => format!("Grid Power Factor: {:.3}", (value as f64) / 1000.0),
        24 => format!("Load Power Factor: {:.3}", (value as f64) / 1000.0),
        25 => format!("Load Percentage: {}%", value),
        26 => format!("Grid Port Voltage: {:.1} V", (value as f64) / 10.0),
        27 => format!("Inverter Temperature: {:.1} °C", (value as f64) / 10.0),
        28 => format!("DCDC Temperature: {:.1} °C", (value as f64) / 10.0),
        29 => format!("Fault Code: {}", value),
        30 => format!("Warning Code: {}", value),
        31 => format!("Safety Type: {}", value),
        32 => format!("Work Time Total: {} Hours", value),
        33 => format!("PV Energy Total: {:.1} kWh", (value as f64) / 10.0),
        34 => format!("Grid Energy Total: {:.1} kWh", (value as f64) / 10.0),
        35 => format!("Load Energy Total: {:.1} kWh", (value as f64) / 10.0),
        36 => format!("Grid Export Total: {:.1} kWh", (value as f64) / 10.0),
        37 => format!("Battery Charge Total: {:.1} kWh", (value as f64) / 10.0),
        38 => format!("Battery Discharge Total: {:.1} kWh", (value as f64) / 10.0),
        39 => format!("Battery Through Total: {:.1} kWh", (value as f64) / 10.0),

        // Daily Statistics (40-79)
        40 => format!("PV Energy Today: {:.1} kWh", (value as f64) / 10.0),
        41 => format!("Grid Energy Today: {:.1} kWh", (value as f64) / 10.0),
        42 => format!("Load Energy Today: {:.1} kWh", (value as f64) / 10.0),
        43 => format!("Grid Export Today: {:.1} kWh", (value as f64) / 10.0),
        44 => format!("Battery Charge Today: {:.1} kWh", (value as f64) / 10.0),
        45 => format!("Battery Discharge Today: {:.1} kWh", (value as f64) / 10.0),
        46 => format!("Battery Through Today: {:.1} kWh", (value as f64) / 10.0),
        47 => format!("Bus Min Voltage Today: {:.1} V", (value as f64) / 10.0),
        48 => format!("Bus Max Voltage Today: {:.1} V", (value as f64) / 10.0),
        49 => format!("Grid Min Voltage Today: {:.1} V", (value as f64) / 10.0),
        50 => format!("Grid Max Voltage Today: {:.1} V", (value as f64) / 10.0),
        51 => format!("Grid Min Freq Today: {:.2} Hz", (value as f64) / 100.0),
        52 => format!("Grid Max Freq Today: {:.2} Hz", (value as f64) / 100.0),
        53 => format!("Battery Min Voltage Today: {:.1} V", (value as f64) / 10.0),
        54 => format!("Battery Max Voltage Today: {:.1} V", (value as f64) / 10.0),
        55 => format!("PV1 Min Voltage Today: {:.1} V", (value as f64) / 10.0),
        56 => format!("PV1 Max Voltage Today: {:.1} V", (value as f64) / 10.0),
        57 => format!("PV2 Min Voltage Today: {:.1} V", (value as f64) / 10.0),
        58 => format!("PV2 Max Voltage Today: {:.1} V", (value as f64) / 10.0),
        59 => format!("Load Min Voltage Today: {:.1} V", (value as f64) / 10.0),
        60 => format!("Load Max Voltage Today: {:.1} V", (value as f64) / 10.0),
        61 => format!("Load Min Freq Today: {:.2} Hz", (value as f64) / 100.0),
        62 => format!("Load Max Freq Today: {:.2} Hz", (value as f64) / 100.0),
        63 => format!("Internal Temp Min Today: {:.1} °C", (value as f64) / 10.0),
        64 => format!("Internal Temp Max Today: {:.1} °C", (value as f64) / 10.0),
        65 => format!("DCDC Temp Min Today: {:.1} °C", (value as f64) / 10.0),
        66 => format!("DCDC Temp Max Today: {:.1} °C", (value as f64) / 10.0),
        67 => format!("Grid Peak Power Today: {} W", value),
        68 => format!("Load Peak Power Today: {} W", value),
        69 => format!("PV Peak Power Today: {} W", value),
        70 => format!("Battery Peak Power Today: {} W", value),
        71 => format!("Grid Export Peak Today: {} W", value),
        72 => format!("Fan Speed 1: {} RPM", value),
        73 => format!("Fan Speed 2: {} RPM", value),
        74 => format!("Fan Speed 3: {} RPM", value),
        75 => format!("Fan Speed 4: {} RPM", value),
        76 => format!("Module 1 Temperature: {:.1} °C", (value as f64) / 10.0),
        77 => format!("Module 2 Temperature: {:.1} °C", (value as f64) / 10.0),
        78 => format!("Module 3 Temperature: {:.1} °C", (value as f64) / 10.0),
        79 => format!("Module 4 Temperature: {:.1} °C", (value as f64) / 10.0),

        // Battery Management System (80-119)
        80 => format!("Battery SOC: {}%", value),
        81 => format!("Battery SOH: {}%", value),
        82 => format!("Battery Status: {}", value),
        83 => format!("Battery Power: {} W", value),
        84 => format!("Battery Current: {:.1} A", (value as f64) / 10.0),
        85 => format!("Battery Voltage: {:.1} V", (value as f64) / 10.0),
        86 => format!("Battery Temperature: {:.1} °C", (value as f64) / 10.0),
        87 => format!("Battery Remaining Capacity: {} Ah", value),
        88 => format!("Battery Total Capacity: {} Ah", value),
        89 => format!("Battery Cycles: {}", value),
        90 => format!("Battery Cell Count: {}", value),
        91 => format!("Battery Over Voltage Protection: {:.1} V", (value as f64) / 10.0),
        92 => format!("Battery Under Voltage Protection: {:.1} V", (value as f64) / 10.0),
        93 => format!("Battery Charge Current Limit: {:.1} A", (value as f64) / 10.0),
        94 => format!("Battery Discharge Current Limit: {:.1} A", (value as f64) / 10.0),
        95 => format!("Battery Charge Power Limit: {} W", value),
        96 => format!("Battery Discharge Power Limit: {} W", value),
        97 => format!("Battery Cell Voltage 01: {:.3} V", (value as f64) / 1000.0),
        98 => format!("Battery Cell Voltage 02: {:.3} V", (value as f64) / 1000.0),
        99 => format!("Battery Cell Voltage 03: {:.3} V", (value as f64) / 1000.0),
        100 => format!("Battery Cell Voltage 04: {:.3} V", (value as f64) / 1000.0),
        101 => format!("Battery Cell Voltage 05: {:.3} V", (value as f64) / 1000.0),
        102 => format!("Battery Cell Voltage 06: {:.3} V", (value as f64) / 1000.0),
        103 => format!("Battery Cell Voltage 07: {:.3} V", (value as f64) / 1000.0),
        104 => format!("Battery Cell Voltage 08: {:.3} V", (value as f64) / 1000.0),
        105 => format!("Battery Cell Voltage 09: {:.3} V", (value as f64) / 1000.0),
        106 => format!("Battery Cell Voltage 10: {:.3} V", (value as f64) / 1000.0),
        107 => format!("Battery Cell Voltage 11: {:.3} V", (value as f64) / 1000.0),
        108 => format!("Battery Cell Voltage 12: {:.3} V", (value as f64) / 1000.0),
        109 => format!("Battery Cell Voltage 13: {:.3} V", (value as f64) / 1000.0),
        110 => format!("Battery Cell Voltage 14: {:.3} V", (value as f64) / 1000.0),
        111 => format!("Battery Cell Voltage 15: {:.3} V", (value as f64) / 1000.0),
        112 => format!("Battery Cell Voltage 16: {:.3} V", (value as f64) / 1000.0),
        113 => format!("Battery Cell Temperature 01: {:.1} °C", (value as f64) / 10.0),
        114 => format!("Battery Cell Temperature 02: {:.1} °C", (value as f64) / 10.0),
        115 => format!("Battery Cell Temperature 03: {:.1} °C", (value as f64) / 10.0),
        116 => format!("Battery Cell Temperature 04: {:.1} °C", (value as f64) / 10.0),
        117 => format!("Battery Warning Flags: {:#06x}", value),
        118 => format!("Battery Fault Flags: {:#06x}", value),
        119 => format!("Battery Protection Flags: {:#06x}", value),

        // Extended BMS Data (120-159)
        120..=135 => format!("Battery Cell Voltage {}: {:.3} V", reg - 119, (value as f64) / 1000.0),
        136..=143 => format!("Battery Cell Temperature {}: {:.1} °C", reg - 135, (value as f64) / 10.0),
        144..=159 => format!("Battery Cell Balance Status {}: {}", reg - 143, value),

        // System Configuration (160-199)
        160 => format!("Grid Mode: {}", match value {
            0 => "General",
            1 => "Grid-Tied",
            2 => "Off-Grid",
            _ => "Unknown"
        }),
        161 => format!("Grid Phase: {}", match value {
            0 => "Single Phase",
            1 => "Split Phase",
            2 => "Three Phase",
            _ => "Unknown"
        }),
        162 => format!("Grid Standard: {}", value),
        163 => format!("Grid Frequency Setting: {}", match value {
            0 => "50 Hz",
            1 => "60 Hz",
            _ => "Unknown"
        }),
        164 => format!("Grid Type: {}", value),
        165 => format!("Grid Configuration: {}", value),
        166 => format!("PV Configuration: {}", value),
        167 => format!("Battery Type: {}", value),
        168 => format!("Battery Nominal Capacity: {} Ah", value),
        169 => format!("Battery Float Voltage: {:.1} V", (value as f64) / 10.0),
        170 => format!("Battery Bulk Voltage: {:.1} V", (value as f64) / 10.0),
        171 => format!("Battery Recharge Voltage: {:.1} V", (value as f64) / 10.0),
        172 => format!("Battery Low Voltage: {:.1} V", (value as f64) / 10.0),
        173 => format!("Battery Shutdown Voltage: {:.1} V", (value as f64) / 10.0),
        174 => format!("Battery Float Current: {:.1} A", (value as f64) / 10.0),
        175 => format!("Battery Bulk Current: {:.1} A", (value as f64) / 10.0),
        176 => format!("Battery Recharge Current: {:.1} A", (value as f64) / 10.0),
        177 => format!("Battery Low Current: {:.1} A", (value as f64) / 10.0),
        178 => format!("Battery Temperature Compensation: {:.1} mV/°C/Cell", (value as f64) / 10.0),
        179 => format!("Battery Temperature Warning Upper: {:.1} °C", (value as f64) / 10.0),
        180 => format!("Battery Temperature Warning Lower: {:.1} °C", (value as f64) / 10.0),
        181 => format!("Battery Temperature Fault Upper: {:.1} °C", (value as f64) / 10.0),
        182 => format!("Battery Temperature Fault Lower: {:.1} °C", (value as f64) / 10.0),
        183 => format!("Battery Cell Voltage Upper: {:.3} V", (value as f64) / 1000.0),
        184 => format!("Battery Cell Voltage Lower: {:.3} V", (value as f64) / 1000.0),
        185 => format!("Battery Cell Voltage Difference: {:.3} V", (value as f64) / 1000.0),
        186 => format!("Battery Discharge Power: {} W", value),
        187 => format!("Battery Charge Power: {} W", value),
        188 => format!("Battery Discharge Current: {:.1} A", (value as f64) / 10.0),
        189 => format!("Battery Charge Current: {:.1} A", (value as f64) / 10.0),
        190 => format!("Battery Equalization Voltage: {:.1} V", (value as f64) / 10.0),
        191 => format!("Battery Equalization Time: {} minutes", value),
        192 => format!("Battery Equalization Interval: {} days", value),
        193 => format!("Battery Equalization Maximum Time: {} minutes", value),
        194 => format!("Battery Equalization Final Voltage: {:.1} V", (value as f64) / 10.0),
        195 => format!("Battery Equalization Current: {:.1} A", (value as f64) / 10.0),
        196 => format!("Battery Float Time: {} minutes", value),
        197 => format!("Battery Maximum Charge Time: {} minutes", value),
        198 => format!("Battery CV Charge Time: {} minutes", value),
        199 => format!("Battery Maintenance Interval: {} days", value),

        // Default case for unknown registers
        _ => format!("Unknown input register {}: {}", reg, value),
    }
} 